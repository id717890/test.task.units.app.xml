@model app_for_xml.Models.FileViewModel.CurrentFile
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-xs-7">
        @using (Html.BeginForm("Edit", "File", FormMethod.Post, new {@class = "", role = "form"}))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(x => x.Id)
            <hr/>
            @Html.ValidationSummary(true, "", new {@class = "text-danger"})
            <div class="form-group">
                @Html.LabelFor(m => m.FileName, new {@class = "control-label", @style = "text-align: left"})
                @Html.TextBoxFor(m => m.FileName, new {@class = "form-control"})
                @Html.ValidationMessageFor(m => m.FileName, "", new {@class = "text-danger"})
            </div>
            <div class="form-group">
                @if (TempData["errors"] != null)
                {
                    <div class="alert alert-danger">
                        <p>@TempData["errors"].ToString()</p>
                    </div>
                }
                @Html.TextAreaFor(m => m.FileContent, new {@class = "form-control", @rows = "15"})
            </div>
            <div class="form-group">
                <input type="submit" value="Сохранить" class="btn btn-success"/>
                @Html.ActionLink("Назад", "Index", "File", null, new {@class = "btn btn-default"})
            </div>
        }
    </div>
    <div class="col-xs-5">
        <hr/>

        <table class="table table-condensed table-hover table-responsive table-striped" id="demands">
            <colgroup>
                <col />
                <col />
                <col />
                <col />
            </colgroup>
            <thead>
                <tr>
                    <th>#</th>
                    <th>Версия</th>
                    <th>Изменено</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
            @if ((Model.File != null) && (Model.File.Versions.Any()))
            {
                var i = 1;
                foreach (var item in Model.File.Versions.OrderByDescending(x => x.Updated))
                {
                    <tr>
                        <td>@i</td>
                        <td>
                            <a href="@Url.Action("Edit", "File", new {id = Model.Id, version = item.Id})">@item.Version</a>
                        </td>
                        <td>@item.Updated.ToString("dd.MM.yy HH:mm")</td>
                        <td>
                            <a href="@Url.Action("DownloadXml", "File", new {id = item.Id})" title="Скачать файл"><i class="fa fa-download"></i></a>
                        </td>
                    </tr>
                    i++;
                }
            }
            else
            {
                <tr><td colspan="4" style="text-align: center">Версии отсутствуют</td></tr>
            }

            </tbody>
        </table>



    </div>

</div>

